THEORY ProofList IS
_f(1) & _f(2) & _f(15) & _f(39) & WellDefinedness_update_top_deck.1,(_f(112) => _f(158));
_f(1) & _f(2) & _f(15) & WellDefinedness_Precondition_update_top_deck.1,(_f(118) & _f(127) & _f(132) & _f(131) & _f(157) & _f(156) & _f(155) & _f(125) & _f(113) & _f(112) => _f(158));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.22,(_f(112) => _f(154));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.21,(_f(112) => _f(153));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.20,(_f(112) => _f(152));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.19,(_f(112) => _f(151));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.18,(_f(112) => _f(150));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.17,(_f(112) => _f(149));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.16,(_f(112) => _f(148));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.15,(_f(112) => _f(147));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.14,(_f(112) => _f(146));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.13,(_f(112) => _f(145));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.12,(_f(112) => _f(144));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.11,(_f(112) => _f(143));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.10,(_f(112) => _f(142));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.9,(_f(112) => _f(141));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.8,(_f(112) => _f(140));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.7,(_f(112) => _f(139));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.6,(_f(112) => _f(138));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.5,(_f(112) => _f(137));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.4,(_f(112) => _f(136));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.3,(_f(112) => _f(135));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.2,(_f(112) => _f(134));
_f(1) & _f(2) & _f(15) & _f(32) & WellDefinedness_init_hands_points.1,(_f(112) => _f(133));
_f(1) & _f(2) & _f(15) & _f(27) & WellDefinedness_init_hands.1,(_f(112) => _f(128));
_f(1) & _f(2) & _f(15) & WellDefinedness_Precondition_init_hands.3,(_f(118) & _f(127) & _f(116) & _f(115) & _f(126) & _f(125) & _f(113) & _f(124) & _f(123) & _f(121) & _f(122) & _f(112) => _f(129));
_f(1) & _f(2) & _f(15) & WellDefinedness_Precondition_init_hands.2,(_f(118) & _f(127) & _f(116) & _f(115) & _f(126) & _f(125) & _f(113) & _f(124) & _f(123) & _f(112) => _f(128));
_f(1) & _f(2) & _f(15) & WellDefinedness_Precondition_init_hands.1,(_f(118) & _f(127) & _f(116) & _f(115) & _f(126) & _f(125) & _f(113) & _f(124) & _f(112) => _f(128));
_f(1) & _f(2) & _f(15) & _f(16) & WellDefinedness_init_deck.1,(_f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(22) & _f(23) & _f(112) => _f(119));
_f(1) & _f(2) & WellDefinednessInvariant.2,(_f(110) & _f(111) & _f(109) & _f(108) & _f(106) & _f(107) & _f(105) & _f(112) => _f(114));
_f(1) & _f(2) & WellDefinednessInvariant.1,(_f(110) & _f(111) & _f(109) & _f(112) => _f(113));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.10,(_f(89) & _f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.9,(_f(89) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.8,(_f(89) & _f(4) & _f(83) => _f(84));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.7,(_f(88) & _f(87) & _f(4) & _f(36) => _f(90));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.6,(_f(88) & _f(87) & _f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.5,(_f(88) & _f(87) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.4,(_f(88) & _f(86) & _f(76) & _f(4) => _f(91));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.3,(_f(88) & _f(86) & _f(4) & _f(36) => _f(90));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.2,(_f(88) & _f(86) & _f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(15) & _f(85) & player_two_play.1,(_f(88) & _f(86) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.10,(_f(80) & _f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.9,(_f(80) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.8,(_f(80) & _f(4) & _f(83) => _f(84));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.7,(_f(79) & _f(78) & _f(4) & _f(34) => _f(81));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.6,(_f(79) & _f(78) & _f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.5,(_f(79) & _f(78) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.4,(_f(79) & _f(77) & _f(76) & _f(4) => _f(82));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.3,(_f(79) & _f(77) & _f(4) & _f(34) => _f(81));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.2,(_f(79) & _f(77) & _f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(15) & _f(75) & player_one_play.1,(_f(79) & _f(77) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.11,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(58) & _f(57) & _f(56) & _f(55) & _f(4) & _f(13) => _f(65));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.10,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(58) & _f(57) & _f(56) & _f(54) & _f(4) & _f(13) => _f(74));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.9,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(58) & _f(57) & _f(53) & _f(4) & _f(13) => _f(73));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.8,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(58) & _f(52) & _f(4) & _f(13) => _f(72));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.7,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(51) & _f(4) & _f(13) => _f(71));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.6,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(50) & _f(4) & _f(13) => _f(70));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.5,(_f(64) & _f(63) & _f(62) & _f(61) & _f(49) & _f(4) & _f(13) => _f(69));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.4,(_f(64) & _f(63) & _f(62) & _f(48) & _f(4) & _f(13) => _f(68));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.3,(_f(64) & _f(63) & _f(47) & _f(4) & _f(13) => _f(67));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.2,(_f(64) & _f(46) & _f(4) & _f(13) => _f(66));
_f(1) & _f(2) & _f(15) & _f(44) & updete_top_deck_points.1,(_f(45) & _f(4) & _f(13) => _f(65));
_f(1) & _f(2) & _f(15) & _f(39) & update_top_deck.3,(_f(4) & _f(11) => _f(42));
_f(1) & _f(2) & _f(15) & _f(39) & update_top_deck.2,(_f(4) & _f(9) => _f(41));
_f(1) & _f(2) & _f(15) & _f(39) & update_top_deck.1,(_f(4) & _f(5) => _f(40));
_f(1) & _f(2) & _f(15) & _f(32) & init_hands_points.3,(_f(33) & _f(4) => _f(38));
_f(1) & _f(2) & _f(15) & _f(32) & init_hands_points.2,(_f(4) & _f(36) => _f(37));
_f(1) & _f(2) & _f(15) & _f(32) & init_hands_points.1,(_f(4) & _f(34) => _f(35));
_f(1) & _f(2) & _f(15) & _f(27) & init_hands.3,(_f(4) & _f(30) => _f(31));
_f(1) & _f(2) & _f(15) & _f(27) & init_hands.2,(_f(4) & _f(9) => _f(29));
_f(1) & _f(2) & _f(15) & _f(27) & init_hands.1,(_f(4) & _f(5) => _f(28));
_f(1) & _f(2) & _f(15) & _f(16) & init_deck.1,(_f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(22) & _f(23) & _f(24) & _f(25) & _f(4) & _f(5) => _f(26));
_f(1) & _f(2) & Initialisation.5,(_f(4) & _f(13) => _f(14));
_f(1) & _f(2) & Initialisation.4,(_f(4) & _f(11) => _f(12));
_f(1) & _f(2) & Initialisation.3,(_f(4) & _f(9) => _f(10));
_f(1) & _f(2) & Initialisation.2,(_f(4) & _f(7) => _f(8));
_f(1) & _f(2) & Initialisation.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..5)*{CARDS_TYPES}): FIN(NATURAL*{CARDS_TYPES}) & not(((1..5)*{CARDS_TYPES}) = {}) & ((1..14)*{CARDS_VALUE}): FIN(NATURAL*{CARDS_VALUE}) & not(((1..14)*{CARDS_VALUE}) = {}) & ((1..3)*{PLAYERS}): FIN(NATURAL*{PLAYERS}) & not(((1..3)*{PLAYERS}) = {}) & CARDS : POW( (((1..5)*{CARDS_TYPES}) * ((1..14)*{CARDS_VALUE}))) & ((CARDS) = ((((1..5)*{CARDS_TYPES}) * ((1..14)*{CARDS_VALUE})))) & ((CARDS) : (FIN(CARDS))) & PLAYABLE : POW( ((((1..5)*{CARDS_TYPES}) - ({(5|->CARDS_TYPES)})) * (((1..14)*{CARDS_VALUE}) - ({(14|->CARDS_VALUE)})))) & ((PLAYABLE) = (((((1..5)*{CARDS_TYPES}) - ({(5|->CARDS_TYPES)})) * (((1..14)*{CARDS_VALUE}) - ({(14|->CARDS_VALUE)}))))) & ((PLAYABLE) : (FIN(PLAYABLE))) & PLAYABLE : POW( CARDS) & ((card(PLAYABLE)) = (52)) & ((tuple_first) = (%(ct,vt).(((ct) : (((1..5)*{CARDS_TYPES}))) & ((vt) : (((1..14)*{CARDS_VALUE}))) | ct))) & ((tuple_second) = (%(ct,vt).(((ct) : (((1..5)*{CARDS_TYPES}))) & ((vt) : (((1..14)*{CARDS_VALUE}))) | vt))) & ((CARDS_POINTS) = (({(((13|->CARDS_VALUE)) |-> (1))}\/{(((1|->CARDS_VALUE)) |-> (1))}\/{(((2|->CARDS_VALUE)) |-> (2))}\/{(((3|->CARDS_VALUE)) |-> (3))}\/{(((4|->CARDS_VALUE)) |-> (4))}\/{(((5|->CARDS_VALUE)) |-> (5))}\/{(((6|->CARDS_VALUE)) |-> (6))}\/{(((7|->CARDS_VALUE)) |-> (7))}\/{(((8|->CARDS_VALUE)) |-> (8))}\/{(((9|->CARDS_VALUE)) |-> (9))}\/{(((10|->CARDS_VALUE)) |-> (10))}\/{(((11|->CARDS_VALUE)) |-> (10))}\/{(((12|->CARDS_VALUE)) |-> (10))})));
((FALSE) = (TRUE));
"Invariant is preserved";
"Check invariant ((deck) : (seq(PLAYABLE)))";
(({}) : (seq(PLAYABLE)));
"Check invariant ((deck) : (FIN(deck)))";
(({}) : (FIN({})));
"Check invariant (size(deck) <= 52)";
(size({}) <= 52);
"Check invariant ((top_deck) : (CARDS))";
(((((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) : (CARDS));
"Check invariant ((top_deck_points) : (NAT))";
((0) : (NAT));
deck : NATURAL-{0} +-> PLAYABLE & ((deck) : (seq(PLAYABLE))) & ((deck) : (FIN(deck))) & (size(deck) <= 52) & discart : NATURAL-{0} +-> PLAYABLE & ((discart) : (seq(PLAYABLE))) & ((discart) : (FIN(discart))) & (size(discart) <= 52) & ((top_deck) : (CARDS)) & ((top_deck_points) : (NAT)) & ((current_player) : (((1..3)*{PLAYERS}))) & player_one_hand : NATURAL-{0} +-> PLAYABLE & ((player_one_hand) : (seq(PLAYABLE))) & ((player_one_points) : (NAT)) & player_two_hand : NATURAL-{0} +-> PLAYABLE & ((player_two_hand) : (seq(PLAYABLE))) & ((player_two_points) : (NAT)) & ((game_over) : (BOOL)) & ((((game_over) = (TRUE))) => (((((player_two_points) = (21))) or (((player_one_points) = (21))))));
((game_over) = (FALSE)) & ((deck) = ({})) & ((discart) = ({})) & ((player_one_hand) = ({})) & ((player_two_hand) = ({}));
new_deck : seq(PLAYABLE );
new_deck : NATURAL-{0} +-> PLAYABLE;
new_deck : iseq(PLAYABLE);
not(new_deck = {});
new_deck ~ : PLAYABLE +-> NATURAL-{0};
ran( new_deck ) = PLAYABLE;
((new_deck) : (perm(PLAYABLE)));
(size(new_deck) <= 52);
((new_deck) : (FIN(new_deck)));
((new_deck) : (seq(PLAYABLE)));
((game_over) = (FALSE)) & not(deck = {}) & ((discart) = ({})) & ((player_one_hand) = ({})) & ((player_two_hand) = ({})) & deck : NATURAL-{0} +-> ran(deck) & ((deck) : (seq(ran(deck)))) & ((3) : (((0) .. (size(deck))))) & ((3) : (((0) .. (size(((deck) \|/ (3))))))) & ((((deck) \|/ (3))) /|\ (3)) : NATURAL-{0} +-> PLAYABLE & ((((((deck) \|/ (3))) /|\ (3))) : (seq(PLAYABLE))) & ((((deck) \|/ (6))) : (FIN(((deck) \|/ (6))))) & ((6) : (((0) .. (size(deck)))));
((((deck) \|/ (6))) : (seq(PLAYABLE)));
(size(((deck) \|/ (6))) <= 52);
"Check invariant ((player_one_hand) : (seq(PLAYABLE)))";
((((deck) /|\ (3))) : (seq(PLAYABLE)));
((game_over) = (FALSE)) & not(deck = {}) & ((discart) = ({})) & not(player_one_hand = {}) & not(player_two_hand = {}) & ((player_one_points) = (0)) & ((player_two_points) = (0));
((game_over) = (TRUE));
"Check invariant ((player_one_points) : (NAT))";
(((((CARDS_POINTS )((tuple_second )((player_one_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(3))))) : (NAT));
"Check invariant ((player_two_points) : (NAT))";
(((((CARDS_POINTS )((tuple_second )((player_two_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(3))))) : (NAT));
(((((((CARDS_POINTS )((tuple_second )((player_two_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(3))))) = (21))) or ((((((CARDS_POINTS )((tuple_second )((player_one_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(3))))) = (21))));
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & ((top_deck) = ((((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE))))) & deck : NATURAL-{0} +-> ran(deck) & ((deck) : (seq(ran(deck)))) & ((tail(deck)) : (FIN(tail(deck))));
((tail(deck)) : (seq(PLAYABLE)));
(size(tail(deck)) <= 52);
((first(deck)) : (CARDS));
((game_over) = (FALSE)) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & ((top_deck_points) = (0)) & ((deck) = ({})) & not(discart = {});
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & ((top_deck_points) = (0)) & ((top_deck) : (dom(tuple_second))) & ((tuple_second) : (((dom(tuple_second)) +-> (ran(tuple_second)))));
(((((tuple_second )(top_deck)) = ((13|->CARDS_VALUE)))) or ((((tuple_second )(top_deck)) = ((1|->CARDS_VALUE)))));
(((tuple_second )(top_deck)) = ((2|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((3|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((4|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((5|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((6|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((7|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((8|->CARDS_VALUE)));
(((tuple_second )(top_deck)) = ((9|->CARDS_VALUE)));
(((((((tuple_second )(top_deck)) = ((10|->CARDS_VALUE)))) or ((((tuple_second )(top_deck)) = ((12|->CARDS_VALUE)))))) or ((((tuple_second )(top_deck)) = ((11|->CARDS_VALUE)))));
not((((((((tuple_second )(top_deck)) = ((10|->CARDS_VALUE)))) or ((((tuple_second )(top_deck)) = ((12|->CARDS_VALUE)))))) or ((((tuple_second )(top_deck)) = ((11|->CARDS_VALUE))))));
not((((tuple_second )(top_deck)) = ((9|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((8|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((7|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((6|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((5|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((4|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((3|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((2|->CARDS_VALUE))));
not((((((tuple_second )(top_deck)) = ((13|->CARDS_VALUE)))) or ((((tuple_second )(top_deck)) = ((1|->CARDS_VALUE))))));
((1) : (NAT));
((2) : (NAT));
((3) : (NAT));
((4) : (NAT));
((5) : (NAT));
((6) : (NAT));
((7) : (NAT));
((8) : (NAT));
((9) : (NAT));
((10) : (NAT));
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & (0 +1 <= top_deck_points) & ((current_player) = ((1|->PLAYERS))) & discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> PLAYABLE & ((((discart) <- (top_deck))) : (seq(PLAYABLE))) & ((((discart) <- (top_deck))) : (FIN(((discart) <- (top_deck))))) & ((not(((top_deck_points + player_one_points) +1 <= 22))) => ((size(((discart) <- (top_deck))) <= 52)));
((TRUE) = (TRUE));
(((top_deck_points + player_one_points)) = (21));
not((((top_deck_points + player_one_points)) = (21)));
((top_deck_points + player_one_points) +1 <= 22);
not(((top_deck_points + player_one_points) +1 <= 22));
(((top_deck_points + player_one_points)) : (NAT));
((((player_two_points) = (21))) or ((((top_deck_points + player_one_points)) = (21))));
"Check invariant (size(discart) <= 52)";
(size(((discart) <- (top_deck))) <= 52);
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & (0 +1 <= top_deck_points) & ((current_player) = ((2|->PLAYERS))) & discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> PLAYABLE & ((((discart) <- (top_deck))) : (seq(PLAYABLE))) & ((((discart) <- (top_deck))) : (FIN(((discart) <- (top_deck))))) & ((not(((top_deck_points + player_two_points) +1 <= 22))) => ((size(((discart) <- (top_deck))) <= 52)));
(((top_deck_points + player_two_points)) = (21));
not((((top_deck_points + player_two_points)) = (21)));
((top_deck_points + player_two_points) +1 <= 22);
not(((top_deck_points + player_two_points) +1 <= 22));
(((top_deck_points + player_two_points)) : (NAT));
(((((top_deck_points + player_two_points)) = (21))) or (((player_one_points) = (21))));
btrue;
((((game_over) = (TRUE))) => (((not(((player_two_points) = (21)))) => (btrue))));
((game_over) : (BOOL));
((player_two_points) : (NAT));
player_two_hand : NATURAL-{0} +-> PLAYABLE;
((player_two_hand) : (seq(PLAYABLE)));
((player_one_points) : (NAT));
player_one_hand : NATURAL-{0} +-> PLAYABLE;
((player_one_hand) : (seq(PLAYABLE)));
((current_player) : (((1..3)*{PLAYERS})));
((top_deck_points) : (NAT));
((top_deck) : (CARDS));
(size(discart) <= 52);
((discart) : (FIN(discart)));
discart : NATURAL-{0} +-> PLAYABLE;
((discart) : (seq(PLAYABLE)));
(size(deck) <= 52);
((deck) : (FIN(deck)));
deck : NATURAL-{0} +-> PLAYABLE;
((deck) : (seq(PLAYABLE)));
"Well definedness";
((deck) : (seq(ran(deck))));
((discart) : (seq(ran(discart))));
((player_one_hand) = ({}));
((discart) = ({}));
((deck) = ({}));
((game_over) = (FALSE));
((new_deck) : (seq(ran(new_deck))));
((((deck) \|/ (6))) : (FIN(((deck) \|/ (6)))));
((((deck) \|/ (3))) /|\ (3)) : NATURAL-{0} +-> PLAYABLE;
((((((deck) \|/ (3))) /|\ (3))) : (seq(PLAYABLE)));
((3) : (((0) .. (size(((deck) \|/ (3)))))));
((3) : (((0) .. (size(deck)))));
deck : NATURAL-{0} +-> ran(deck);
((player_two_hand) = ({}));
not(deck = {});
((((deck) \|/ (3))) : (seq(ran(((deck) \|/ (3))))));
((6) : (((0) .. (size(deck)))));
((player_one_points) = (0));
not(player_two_hand = {});
not(player_one_hand = {});
((1) : (dom(player_one_hand)));
((player_one_hand) : (((dom(player_one_hand)) +-> (ran(player_one_hand)))));
(((player_one_hand )(1)) : (dom(tuple_second)));
((tuple_second) : (((dom(tuple_second)) +-> (ran(tuple_second)))));
(((tuple_second )((player_one_hand )(1))) : (dom(CARDS_POINTS)));
((CARDS_POINTS) : (((dom(CARDS_POINTS)) +-> (ran(CARDS_POINTS)))));
((2) : (dom(player_one_hand)));
(((player_one_hand )(2)) : (dom(tuple_second)));
(((tuple_second )((player_one_hand )(2))) : (dom(CARDS_POINTS)));
((3) : (dom(player_one_hand)));
(((player_one_hand )(3)) : (dom(tuple_second)));
(((tuple_second )((player_one_hand )(3))) : (dom(CARDS_POINTS)));
((1) : (dom(player_two_hand)));
((player_two_hand) : (((dom(player_two_hand)) +-> (ran(player_two_hand)))));
(((player_two_hand )(1)) : (dom(tuple_second)));
(((tuple_second )((player_two_hand )(1))) : (dom(CARDS_POINTS)));
((2) : (dom(player_two_hand)));
(((player_two_hand )(2)) : (dom(tuple_second)));
(((tuple_second )((player_two_hand )(2))) : (dom(CARDS_POINTS)));
((3) : (dom(player_two_hand)));
(((player_two_hand )(3)) : (dom(tuple_second)));
(((tuple_second )((player_two_hand )(3))) : (dom(CARDS_POINTS)));
((top_deck) = ((((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))));
(0 +1 <= player_two_points);
(0 +1 <= player_one_points);
not(((deck) = ({})));
((top_deck_points) = (0));
not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE))));
((top_deck) : (dom(tuple_second)));
not((((tuple_second )(top_deck)) = ((13|->CARDS_VALUE))));
not((((tuple_second )(top_deck)) = ((10|->CARDS_VALUE))));
not((((((tuple_second )(top_deck)) = ((10|->CARDS_VALUE)))) or ((((tuple_second )(top_deck)) = ((12|->CARDS_VALUE))))));
((not(((top_deck_points + player_one_points) +1 <= 22))) => (discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> ran(((discart) <- (top_deck))) & ((((discart) <- (top_deck))) : (seq(ran(((discart) <- (top_deck))))))));
((((discart) <- (top_deck))) : (FIN(((discart) <- (top_deck)))));
((discart) <- (top_deck)) : NATURAL-{0} +-> PLAYABLE;
((((discart) <- (top_deck))) : (seq(PLAYABLE)));
discart : NATURAL-{0} +-> ran(discart);
((current_player) = ((1|->PLAYERS)));
(0 +1 <= top_deck_points);
((not(((top_deck_points + player_two_points) +1 <= 22))) => (discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> ran(((discart) <- (top_deck))) & ((((discart) <- (top_deck))) : (seq(ran(((discart) <- (top_deck))))))));
((current_player) = ((2|->PLAYERS)))
END
&
THEORY EnumerateX IS
CARDS_TYPES == {CLUBS,DIAMONDS,HEARTS,SPADES,NOTYPE};
CARDS_VALUE == {ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE,KING,QUEEN,JACK,ACE,NOVALUE};
PLAYERS == {P_ONE,P_TWO,NOPLAYER}
END
