THEORY ProofList IS
_f(1) & _f(2) & _f(13) & _f(38) & WellDefinedness_update_top_deck.2,(_f(78) => _f(132));
_f(1) & _f(2) & _f(13) & _f(38) & WellDefinedness_update_top_deck.1,(_f(78) => _f(131));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_update_top_deck.6,(_f(84) & _f(93) & _f(100) & _f(99) & _f(130) & _f(129) & _f(128) & _f(91) & _f(79) & _f(127) & _f(126) & _f(106) & _f(78) => _f(132));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_update_top_deck.5,(_f(84) & _f(93) & _f(100) & _f(99) & _f(130) & _f(129) & _f(128) & _f(91) & _f(79) & _f(127) & _f(78) => _f(108));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_update_top_deck.4,(_f(84) & _f(93) & _f(100) & _f(99) & _f(130) & _f(129) & _f(128) & _f(91) & _f(79) & _f(127) & _f(78) => _f(125));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_update_top_deck.3,(_f(84) & _f(93) & _f(100) & _f(99) & _f(130) & _f(129) & _f(128) & _f(91) & _f(79) & _f(127) & _f(78) => _f(106));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_update_top_deck.2,(_f(84) & _f(93) & _f(100) & _f(99) & _f(130) & _f(129) & _f(128) & _f(91) & _f(79) & _f(127) & _f(78) => _f(132));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_update_top_deck.1,(_f(84) & _f(93) & _f(100) & _f(99) & _f(130) & _f(129) & _f(128) & _f(91) & _f(79) & _f(78) => _f(131));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.22,(_f(78) => _f(124));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.21,(_f(78) => _f(123));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.20,(_f(78) => _f(122));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.19,(_f(78) => _f(121));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.18,(_f(78) => _f(120));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.17,(_f(78) => _f(119));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.16,(_f(78) => _f(118));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.15,(_f(78) => _f(117));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.14,(_f(78) => _f(116));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.13,(_f(78) => _f(115));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.12,(_f(78) => _f(114));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.11,(_f(78) => _f(113));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.10,(_f(78) => _f(112));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.9,(_f(78) => _f(111));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.8,(_f(78) => _f(110));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.7,(_f(78) => _f(109));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.6,(_f(78) => _f(108));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.5,(_f(78) => _f(107));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.4,(_f(78) => _f(106));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.3,(_f(78) => _f(105));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.2,(_f(78) => _f(104));
_f(1) & _f(2) & _f(13) & _f(31) & WellDefinedness_init_hands_points.1,(_f(78) => _f(103));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_init_hands_points.2,(_f(84) & _f(93) & _f(82) & _f(100) & _f(99) & _f(98) & _f(97) & _f(96) & _f(78) => _f(102));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_init_hands_points.1,(_f(84) & _f(93) & _f(82) & _f(100) & _f(99) & _f(98) & _f(97) & _f(78) => _f(101));
_f(1) & _f(2) & _f(13) & _f(26) & WellDefinedness_init_hands.1,(_f(78) => _f(94));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_init_hands.3,(_f(84) & _f(93) & _f(82) & _f(81) & _f(92) & _f(91) & _f(79) & _f(90) & _f(89) & _f(87) & _f(88) & _f(78) => _f(95));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_init_hands.2,(_f(84) & _f(93) & _f(82) & _f(81) & _f(92) & _f(91) & _f(79) & _f(90) & _f(89) & _f(78) => _f(94));
_f(1) & _f(2) & _f(13) & WellDefinedness_Precondition_init_hands.1,(_f(84) & _f(93) & _f(82) & _f(81) & _f(92) & _f(91) & _f(79) & _f(90) & _f(78) => _f(94));
_f(1) & _f(2) & _f(13) & _f(15) & WellDefinedness_init_deck.1,(_f(16) & _f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(22) & _f(78) => _f(85));
_f(1) & _f(2) & WellDefinednessInvariant.2,(_f(76) & _f(77) & _f(75) & _f(73) & _f(74) & _f(78) => _f(80));
_f(1) & _f(2) & WellDefinednessInvariant.1,(_f(76) & _f(77) & _f(78) => _f(79));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.10,(_f(58) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.9,(_f(58) & _f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.8,(_f(58) & _f(4) & _f(44) => _f(53));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.7,(_f(57) & _f(56) & _f(4) & _f(35) => _f(59));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.6,(_f(57) & _f(56) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.5,(_f(57) & _f(56) & _f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.4,(_f(57) & _f(55) & _f(46) & _f(4) => _f(60));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.3,(_f(57) & _f(55) & _f(4) & _f(35) => _f(59));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.2,(_f(57) & _f(55) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(13) & _f(54) & player_two_play.1,(_f(57) & _f(55) & _f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.10,(_f(50) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.9,(_f(50) & _f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.8,(_f(50) & _f(4) & _f(44) => _f(53));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.7,(_f(49) & _f(48) & _f(4) & _f(33) => _f(51));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.6,(_f(49) & _f(48) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.5,(_f(49) & _f(48) & _f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.4,(_f(49) & _f(47) & _f(46) & _f(4) => _f(52));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.3,(_f(49) & _f(47) & _f(4) & _f(33) => _f(51));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.2,(_f(49) & _f(47) & _f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(13) & _f(45) & player_one_play.1,(_f(49) & _f(47) & _f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(13) & _f(42) & reset_deck.2,(_f(4) & _f(44) => _f(8));
_f(1) & _f(2) & _f(13) & _f(42) & reset_deck.1,(_f(4) & _f(43) => _f(6));
_f(1) & _f(2) & _f(13) & _f(38) & update_top_deck.3,(_f(4) & _f(9) => _f(41));
_f(1) & _f(2) & _f(13) & _f(38) & update_top_deck.2,(_f(4) & _f(7) => _f(40));
_f(1) & _f(2) & _f(13) & _f(38) & update_top_deck.1,(_f(4) & _f(5) => _f(39));
_f(1) & _f(2) & _f(13) & _f(31) & init_hands_points.3,(_f(32) & _f(4) => _f(37));
_f(1) & _f(2) & _f(13) & _f(31) & init_hands_points.2,(_f(4) & _f(35) => _f(36));
_f(1) & _f(2) & _f(13) & _f(31) & init_hands_points.1,(_f(4) & _f(33) => _f(34));
_f(1) & _f(2) & _f(13) & _f(26) & init_hands.3,(_f(4) & _f(29) => _f(30));
_f(1) & _f(2) & _f(13) & _f(26) & init_hands.2,(_f(4) & _f(7) => _f(28));
_f(1) & _f(2) & _f(13) & _f(26) & init_hands.1,(_f(4) & _f(5) => _f(27));
_f(1) & _f(2) & _f(13) & _f(15) & init_deck.1,(_f(16) & _f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(22) & _f(23) & _f(24) & _f(4) & _f(5) => _f(25));
_f(1) & _f(2) & Initialisation.4,(_f(4) & _f(11) => _f(12));
_f(1) & _f(2) & Initialisation.3,(_f(4) & _f(9) => _f(10));
_f(1) & _f(2) & Initialisation.2,(_f(4) & _f(7) => _f(8));
_f(1) & _f(2) & Initialisation.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..5)*{CARDS_TYPES}): FIN(NATURAL*{CARDS_TYPES}) & not(((1..5)*{CARDS_TYPES}) = {}) & ((1..14)*{CARDS_VALUE}): FIN(NATURAL*{CARDS_VALUE}) & not(((1..14)*{CARDS_VALUE}) = {}) & ((1..3)*{PLAYERS}): FIN(NATURAL*{PLAYERS}) & not(((1..3)*{PLAYERS}) = {}) & CARDS : POW( (((1..5)*{CARDS_TYPES}) * ((1..14)*{CARDS_VALUE}))) & ((CARDS) = ((((1..5)*{CARDS_TYPES}) * ((1..14)*{CARDS_VALUE})))) & ((CARDS) : (FIN(CARDS))) & PLAYABLE : POW( ((((1..5)*{CARDS_TYPES}) - ({(5|->CARDS_TYPES)})) * (((1..14)*{CARDS_VALUE}) - ({(14|->CARDS_VALUE)})))) & ((PLAYABLE) = (((((1..5)*{CARDS_TYPES}) - ({(5|->CARDS_TYPES)})) * (((1..14)*{CARDS_VALUE}) - ({(14|->CARDS_VALUE)}))))) & ((PLAYABLE) : (FIN(PLAYABLE))) & PLAYABLE : POW( CARDS) & ((card(PLAYABLE)) = (52)) & ((tuple_first) = (%(ct,cv).(((ct) : (((1..5)*{CARDS_TYPES}))) & ((cv) : (((1..14)*{CARDS_VALUE}))) | ct))) & ((tuple_second) = (%(ct,cv).(((ct) : (((1..5)*{CARDS_TYPES}))) & ((cv) : (((1..14)*{CARDS_VALUE}))) | cv))) & ((CARDS_POINTS) = (({(((13|->CARDS_VALUE)) |-> (1))}\/{(((1|->CARDS_VALUE)) |-> (1))}\/{(((2|->CARDS_VALUE)) |-> (2))}\/{(((3|->CARDS_VALUE)) |-> (3))}\/{(((4|->CARDS_VALUE)) |-> (4))}\/{(((5|->CARDS_VALUE)) |-> (5))}\/{(((6|->CARDS_VALUE)) |-> (6))}\/{(((7|->CARDS_VALUE)) |-> (7))}\/{(((8|->CARDS_VALUE)) |-> (8))}\/{(((9|->CARDS_VALUE)) |-> (9))}\/{(((10|->CARDS_VALUE)) |-> (10))}\/{(((11|->CARDS_VALUE)) |-> (10))}\/{(((12|->CARDS_VALUE)) |-> (10))}))) & ((CARDS_TYPES_ARRAY) = (({((0) |-> ((1|->CARDS_TYPES)))}\/{((1) |-> ((1|->CARDS_TYPES)))}\/{((2) |-> ((1|->CARDS_TYPES)))}\/{((3) |-> ((1|->CARDS_TYPES)))}\/{((4) |-> ((1|->CARDS_TYPES)))}\/{((5) |-> ((1|->CARDS_TYPES)))}\/{((6) |-> ((1|->CARDS_TYPES)))}\/{((7) |-> ((1|->CARDS_TYPES)))}\/{((8) |-> ((1|->CARDS_TYPES)))}\/{((9) |-> ((1|->CARDS_TYPES)))}\/{((10) |-> ((1|->CARDS_TYPES)))}\/{((11) |-> ((1|->CARDS_TYPES)))}\/{((12) |-> ((1|->CARDS_TYPES)))}\/{((13) |-> ((2|->CARDS_TYPES)))}\/{((14) |-> ((2|->CARDS_TYPES)))}\/{((15) |-> ((2|->CARDS_TYPES)))}\/{((16) |-> ((2|->CARDS_TYPES)))}\/{((17) |-> ((2|->CARDS_TYPES)))}\/{((18) |-> ((2|->CARDS_TYPES)))}\/{((19) |-> ((2|->CARDS_TYPES)))}\/{((20) |-> ((2|->CARDS_TYPES)))}\/{((21) |-> ((2|->CARDS_TYPES)))}\/{((22) |-> ((2|->CARDS_TYPES)))}\/{((23) |-> ((2|->CARDS_TYPES)))}\/{((24) |-> ((2|->CARDS_TYPES)))}\/{((25) |-> ((2|->CARDS_TYPES)))}\/{((26) |-> ((3|->CARDS_TYPES)))}\/{((27) |-> ((3|->CARDS_TYPES)))}\/{((28) |-> ((3|->CARDS_TYPES)))}\/{((29) |-> ((3|->CARDS_TYPES)))}\/{((30) |-> ((3|->CARDS_TYPES)))}\/{((31) |-> ((3|->CARDS_TYPES)))}\/{((32) |-> ((3|->CARDS_TYPES)))}\/{((33) |-> ((3|->CARDS_TYPES)))}\/{((34) |-> ((3|->CARDS_TYPES)))}\/{((35) |-> ((3|->CARDS_TYPES)))}\/{((36) |-> ((3|->CARDS_TYPES)))}\/{((37) |-> ((3|->CARDS_TYPES)))}\/{((38) |-> ((3|->CARDS_TYPES)))}\/{((39) |-> ((4|->CARDS_TYPES)))}\/{((40) |-> ((4|->CARDS_TYPES)))}\/{((41) |-> ((4|->CARDS_TYPES)))}\/{((42) |-> ((4|->CARDS_TYPES)))}\/{((43) |-> ((4|->CARDS_TYPES)))}\/{((44) |-> ((4|->CARDS_TYPES)))}\/{((45) |-> ((4|->CARDS_TYPES)))}\/{((46) |-> ((4|->CARDS_TYPES)))}\/{((47) |-> ((4|->CARDS_TYPES)))}\/{((48) |-> ((4|->CARDS_TYPES)))}\/{((49) |-> ((4|->CARDS_TYPES)))}\/{((50) |-> ((4|->CARDS_TYPES)))}\/{((51) |-> ((4|->CARDS_TYPES)))}))) & ((CARDS_VALUES_ARRAY) = (({((0) |-> ((1|->CARDS_VALUE)))}\/{((1) |-> ((2|->CARDS_VALUE)))}\/{((2) |-> ((3|->CARDS_VALUE)))}\/{((3) |-> ((4|->CARDS_VALUE)))}\/{((4) |-> ((5|->CARDS_VALUE)))}\/{((5) |-> ((6|->CARDS_VALUE)))}\/{((6) |-> ((7|->CARDS_VALUE)))}\/{((7) |-> ((8|->CARDS_VALUE)))}\/{((8) |-> ((9|->CARDS_VALUE)))}\/{((9) |-> ((10|->CARDS_VALUE)))}\/{((10) |-> ((11|->CARDS_VALUE)))}\/{((11) |-> ((12|->CARDS_VALUE)))}\/{((12) |-> ((13|->CARDS_VALUE)))}\/{((13) |-> ((1|->CARDS_VALUE)))}\/{((14) |-> ((2|->CARDS_VALUE)))}\/{((15) |-> ((3|->CARDS_VALUE)))}\/{((16) |-> ((4|->CARDS_VALUE)))}\/{((17) |-> ((5|->CARDS_VALUE)))}\/{((18) |-> ((6|->CARDS_VALUE)))}\/{((19) |-> ((7|->CARDS_VALUE)))}\/{((20) |-> ((8|->CARDS_VALUE)))}\/{((21) |-> ((9|->CARDS_VALUE)))}\/{((22) |-> ((10|->CARDS_VALUE)))}\/{((23) |-> ((11|->CARDS_VALUE)))}\/{((24) |-> ((12|->CARDS_VALUE)))}\/{((25) |-> ((13|->CARDS_VALUE)))}\/{((26) |-> ((1|->CARDS_VALUE)))}\/{((27) |-> ((2|->CARDS_VALUE)))}\/{((28) |-> ((3|->CARDS_VALUE)))}\/{((29) |-> ((4|->CARDS_VALUE)))}\/{((30) |-> ((5|->CARDS_VALUE)))}\/{((31) |-> ((6|->CARDS_VALUE)))}\/{((32) |-> ((7|->CARDS_VALUE)))}\/{((33) |-> ((8|->CARDS_VALUE)))}\/{((34) |-> ((9|->CARDS_VALUE)))}\/{((35) |-> ((10|->CARDS_VALUE)))}\/{((36) |-> ((11|->CARDS_VALUE)))}\/{((37) |-> ((12|->CARDS_VALUE)))}\/{((38) |-> ((13|->CARDS_VALUE)))}\/{((39) |-> ((1|->CARDS_VALUE)))}\/{((40) |-> ((2|->CARDS_VALUE)))}\/{((41) |-> ((3|->CARDS_VALUE)))}\/{((42) |-> ((4|->CARDS_VALUE)))}\/{((43) |-> ((5|->CARDS_VALUE)))}\/{((44) |-> ((6|->CARDS_VALUE)))}\/{((45) |-> ((7|->CARDS_VALUE)))}\/{((46) |-> ((8|->CARDS_VALUE)))}\/{((47) |-> ((9|->CARDS_VALUE)))}\/{((48) |-> ((10|->CARDS_VALUE)))}\/{((49) |-> ((11|->CARDS_VALUE)))}\/{((50) |-> ((12|->CARDS_VALUE)))}\/{((51) |-> ((13|->CARDS_VALUE)))})));
((FALSE) = (TRUE));
"Invariant is preserved";
"Check invariant ((deck) : (seq(PLAYABLE)))";
(({}) : (seq(PLAYABLE)));
"Check invariant (size(deck) <= 52)";
(size({}) <= 52);
"Check invariant ((top_deck) : (CARDS))";
(((((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) : (CARDS));
"Check invariant ((top_deck_points) : (NAT))";
((0) : (NAT));
deck : NATURAL-{0} +-> PLAYABLE & ((deck) : (seq(PLAYABLE))) & (size(deck) <= 52) & discart : NATURAL-{0} +-> PLAYABLE & ((discart) : (seq(PLAYABLE))) & (size(discart) <= 52) & ((top_deck) : (CARDS)) & ((top_deck_points) : (NAT)) & ((current_player) : (((1..3)*{PLAYERS}))) & player_one_hand : NATURAL-{0} +-> PLAYABLE & ((player_one_hand) : (seq(PLAYABLE))) & ((player_one_points) : (NAT)) & player_two_hand : NATURAL-{0} +-> PLAYABLE & ((player_two_hand) : (seq(PLAYABLE))) & ((player_two_points) : (NAT)) & ((game_over) : (BOOL)) & ((((game_over) = (TRUE))) => (((((player_two_points) = (21))) or (((player_one_points) = (21))))));
btrue;
((game_over) = (FALSE)) & ((deck) = ({})) & ((discart) = ({})) & ((player_one_hand) = ({})) & ((player_two_hand) = ({}));
new_deck : seq(PLAYABLE );
new_deck : NATURAL-{0} +-> PLAYABLE;
new_deck : iseq(PLAYABLE);
not(new_deck = {});
new_deck ~ : PLAYABLE +-> NATURAL-{0};
ran( new_deck ) = PLAYABLE;
((new_deck) : (perm(PLAYABLE)));
(size(new_deck) <= 52);
((new_deck) : (FIN(new_deck)));
((new_deck) : (seq(PLAYABLE)));
((game_over) = (FALSE)) & not(deck = {}) & ((discart) = ({})) & ((player_one_hand) = ({})) & ((player_two_hand) = ({})) & deck : NATURAL-{0} +-> ran(deck) & ((deck) : (seq(ran(deck)))) & ((3) : (((0) .. (size(deck))))) & ((3) : (((0) .. (size(((deck) \|/ (3))))))) & ((((deck) \|/ (3))) /|\ (3)) : NATURAL-{0} +-> PLAYABLE & ((((((deck) \|/ (3))) /|\ (3))) : (seq(PLAYABLE))) & ((((deck) \|/ (6))) : (FIN(((deck) \|/ (6))))) & ((6) : (((0) .. (size(deck)))));
((((deck) \|/ (6))) : (seq(PLAYABLE)));
(size(((deck) \|/ (6))) <= 52);
"Check invariant ((player_one_hand) : (seq(PLAYABLE)))";
((((deck) /|\ (3))) : (seq(PLAYABLE)));
((game_over) = (FALSE)) & not(deck = {}) & ((discart) = ({})) & not(player_one_hand = {}) & not(player_two_hand = {}) & ((player_one_points) = (0)) & ((player_two_points) = (0)) & ((size(player_one_hand)) = (3)) & ((size(player_two_hand)) = (3));
((game_over) = (TRUE));
"Check invariant ((player_one_points) : (NAT))";
(((((CARDS_POINTS )((tuple_second )((player_one_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(3))))) : (NAT));
"Check invariant ((player_two_points) : (NAT))";
(((((CARDS_POINTS )((tuple_second )((player_two_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(3))))) : (NAT));
(((((((CARDS_POINTS )((tuple_second )((player_two_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_two_hand )(3))))) = (21))) or ((((((CARDS_POINTS )((tuple_second )((player_one_hand )(1))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(2)))) + (CARDS_POINTS )((tuple_second )((player_one_hand )(3))))) = (21))));
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & ((top_deck) = ((((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE))))) & deck : NATURAL-{0} +-> ran(deck) & ((deck) : (seq(ran(deck)))) & ((tail(deck)) : (FIN(tail(deck)))) & (((CARDS_POINTS )((tuple_second )(top_deck))) : (NAT)) & ((tuple_second) : (((dom(tuple_second)) +-> (ran(tuple_second))))) & (((tuple_second )(top_deck)) : (dom(CARDS_POINTS))) & ((CARDS_POINTS) : (((dom(CARDS_POINTS)) +-> (ran(CARDS_POINTS)))));
((tail(deck)) : (seq(PLAYABLE)));
(size(tail(deck)) <= 52);
((first(deck)) : (CARDS));
((game_over) = (FALSE)) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & ((top_deck_points) = (0)) & ((deck) = ({})) & not(discart = {});
"Check invariant ((discart) : (seq(PLAYABLE)))";
"Check invariant (size(discart) <= 52)";
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & (0 +1 <= top_deck_points) & ((current_player) = ((1|->PLAYERS))) & discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> PLAYABLE & ((((discart) <- (top_deck))) : (seq(PLAYABLE))) & ((((discart) <- (top_deck))) : (FIN(((discart) <- (top_deck))))) & ((not(((top_deck_points + player_one_points) +1 <= 22))) => ((size(((discart) <- (top_deck))) <= 52)));
((TRUE) = (TRUE));
(((top_deck_points + player_one_points)) = (21));
not((((top_deck_points + player_one_points)) = (21)));
((top_deck_points + player_one_points) +1 <= 22);
not(((top_deck_points + player_one_points) +1 <= 22));
(((top_deck_points + player_one_points)) : (NAT));
((((player_two_points) = (21))) or ((((top_deck_points + player_one_points)) = (21))));
(size(((discart) <- (top_deck))) <= 52);
((game_over) = (FALSE)) & not(deck = {}) & not(player_one_hand = {}) & not(player_two_hand = {}) & (0 +1 <= player_one_points) & (0 +1 <= player_two_points) & not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))) & (0 +1 <= top_deck_points) & ((current_player) = ((2|->PLAYERS))) & discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> PLAYABLE & ((((discart) <- (top_deck))) : (seq(PLAYABLE))) & ((((discart) <- (top_deck))) : (FIN(((discart) <- (top_deck))))) & ((not(((top_deck_points + player_two_points) +1 <= 22))) => ((size(((discart) <- (top_deck))) <= 52)));
(((top_deck_points + player_two_points)) = (21));
not((((top_deck_points + player_two_points)) = (21)));
((top_deck_points + player_two_points) +1 <= 22);
not(((top_deck_points + player_two_points) +1 <= 22));
(((top_deck_points + player_two_points)) : (NAT));
(((((top_deck_points + player_two_points)) = (21))) or (((player_one_points) = (21))));
((((game_over) = (TRUE))) => (((not(((player_two_points) = (21)))) => (btrue))));
((game_over) : (BOOL));
((player_two_points) : (NAT));
player_two_hand : NATURAL-{0} +-> PLAYABLE;
((player_two_hand) : (seq(PLAYABLE)));
((player_one_points) : (NAT));
player_one_hand : NATURAL-{0} +-> PLAYABLE;
((player_one_hand) : (seq(PLAYABLE)));
((current_player) : (((1..3)*{PLAYERS})));
((top_deck_points) : (NAT));
((top_deck) : (CARDS));
(size(discart) <= 52);
discart : NATURAL-{0} +-> PLAYABLE;
((discart) : (seq(PLAYABLE)));
(size(deck) <= 52);
deck : NATURAL-{0} +-> PLAYABLE;
((deck) : (seq(PLAYABLE)));
"Well definedness";
((deck) : (seq(ran(deck))));
((discart) : (seq(ran(discart))));
((player_one_hand) = ({}));
((discart) = ({}));
((deck) = ({}));
((game_over) = (FALSE));
((new_deck) : (seq(ran(new_deck))));
((((deck) \|/ (6))) : (FIN(((deck) \|/ (6)))));
((((deck) \|/ (3))) /|\ (3)) : NATURAL-{0} +-> PLAYABLE;
((((((deck) \|/ (3))) /|\ (3))) : (seq(PLAYABLE)));
((3) : (((0) .. (size(((deck) \|/ (3)))))));
((3) : (((0) .. (size(deck)))));
deck : NATURAL-{0} +-> ran(deck);
((player_two_hand) = ({}));
not(deck = {});
((((deck) \|/ (3))) : (seq(ran(((deck) \|/ (3))))));
((6) : (((0) .. (size(deck)))));
((size(player_one_hand)) = (3));
((player_two_points) = (0));
((player_one_points) = (0));
not(player_two_hand = {});
not(player_one_hand = {});
((player_one_hand) : (seq(ran(player_one_hand))));
((player_two_hand) : (seq(ran(player_two_hand))));
((1) : (dom(player_one_hand)));
((player_one_hand) : (((dom(player_one_hand)) +-> (ran(player_one_hand)))));
(((player_one_hand )(1)) : (dom(tuple_second)));
((tuple_second) : (((dom(tuple_second)) +-> (ran(tuple_second)))));
(((tuple_second )((player_one_hand )(1))) : (dom(CARDS_POINTS)));
((CARDS_POINTS) : (((dom(CARDS_POINTS)) +-> (ran(CARDS_POINTS)))));
((2) : (dom(player_one_hand)));
(((player_one_hand )(2)) : (dom(tuple_second)));
(((tuple_second )((player_one_hand )(2))) : (dom(CARDS_POINTS)));
((3) : (dom(player_one_hand)));
(((player_one_hand )(3)) : (dom(tuple_second)));
(((tuple_second )((player_one_hand )(3))) : (dom(CARDS_POINTS)));
((1) : (dom(player_two_hand)));
((player_two_hand) : (((dom(player_two_hand)) +-> (ran(player_two_hand)))));
(((player_two_hand )(1)) : (dom(tuple_second)));
(((tuple_second )((player_two_hand )(1))) : (dom(CARDS_POINTS)));
((2) : (dom(player_two_hand)));
(((player_two_hand )(2)) : (dom(tuple_second)));
(((tuple_second )((player_two_hand )(2))) : (dom(CARDS_POINTS)));
((3) : (dom(player_two_hand)));
(((player_two_hand )(3)) : (dom(tuple_second)));
(((tuple_second )((player_two_hand )(3))) : (dom(CARDS_POINTS)));
(((tuple_second )(top_deck)) : (dom(CARDS_POINTS)));
(((CARDS_POINTS )((tuple_second )(top_deck))) : (NAT));
((tail(deck)) : (FIN(tail(deck))));
((top_deck) = ((((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE)))));
(0 +1 <= player_two_points);
(0 +1 <= player_one_points);
not(((deck) = ({})));
((top_deck) : (dom(tuple_second)));
((top_deck_points) = (0));
not(top_deck = (((5|->CARDS_TYPES)) |-> ((14|->CARDS_VALUE))));
((not(((top_deck_points + player_one_points) +1 <= 22))) => (discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> ran(((discart) <- (top_deck))) & ((((discart) <- (top_deck))) : (seq(ran(((discart) <- (top_deck))))))));
((((discart) <- (top_deck))) : (FIN(((discart) <- (top_deck)))));
((discart) <- (top_deck)) : NATURAL-{0} +-> PLAYABLE;
((((discart) <- (top_deck))) : (seq(PLAYABLE)));
discart : NATURAL-{0} +-> ran(discart);
((current_player) = ((1|->PLAYERS)));
(0 +1 <= top_deck_points);
((not(((top_deck_points + player_two_points) +1 <= 22))) => (discart : NATURAL-{0} +-> ran(discart) & ((discart) : (seq(ran(discart)))) & ((discart) <- (top_deck)) : NATURAL-{0} +-> ran(((discart) <- (top_deck))) & ((((discart) <- (top_deck))) : (seq(ran(((discart) <- (top_deck))))))));
((current_player) = ((2|->PLAYERS)))
END
&
THEORY EnumerateX IS
CARDS_TYPES == {CLUBS,DIAMONDS,HEARTS,SPADES,NOTYPE};
CARDS_VALUE == {ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE,KING,QUEEN,JACK,ACE,NOVALUE};
PLAYERS == {P_ONE,P_TWO,NOPLAYER}
END
