/* Game_r
 * Author: Nalbert Gabriel Melo Leal
 * Creation date: 06/12/2020
 */

REFINEMENT Game_r
REFINES game
SEES Game_cards
VARIABLES
  all_cards_t,
  all_cards_v,
  deck_r,
  discart_r,
  player_one_hand_r,
  player_one_points_r,
  player_two_hand_r,
  player_two_points_r,
  current_player_r,
  top_deck_r, 
  top_deck_points_r,
  game_over_r
INVARIANT
//  all_cards : (0..51) --> PLAYABLE &
  all_cards_t : (0..51) --> CARDS_TYPES &
  all_cards_v : (0..51) --> CARDS_VALUE &
  
  deck_r : (0..51) --> BOOL &
  !ii . (ii : 0..51 => ((deck_r(ii) = TRUE) <=> ((all_cards_t(ii) |-> all_cards_v(ii)) : ran(deck))) ) &
//  ran(deck) = ran(dom(deck_r |> {TRUE}) <| all_cards) &
  
  discart_r : (0..51) --> BOOL &
  !ii . (ii : 0..51 & discart_r(ii) = TRUE => (all_cards_t(ii) |-> all_cards_v(ii)) : ran(discart)) &
//  ran(discart) = ran(dom(discart_r |> {TRUE}) <| all_cards) &
  
  player_one_hand_r : (0..51) --> BOOL &
  !ii . (ii : 0..51 & player_one_hand_r(ii) = TRUE => (all_cards_t(ii) |-> all_cards_v(ii)) : ran(player_one_hand)) &
//  ran(player_one_hand) = ran(dom(player_one_hand_r |> {TRUE}) <| all_cards) &
  
  player_one_points_r : NAT &
  player_one_points = player_one_points_r &
  
  player_two_hand_r : (0..51) --> BOOL &
  !ii . (ii : 0..51 & player_two_hand_r(ii) = TRUE => (all_cards_t(ii) |-> all_cards_v(ii)) : ran(player_one_hand)) &
//  ran(player_two_hand) = ran(dom(player_two_hand_r |> {TRUE}) <| all_cards) &
  
  player_two_points_r : NAT &
  player_two_points = player_two_points_r &
  
  current_player_r : PLAYERS &
  current_player = current_player_r &
  
  top_deck_r : INT &
  ( top_deck_r >= -1 & top_deck_r <= 52) &
  ( (top_deck_r >= 0 => top_deck = (all_cards_t(top_deck_r) |-> all_cards_v(top_deck_r)) ) or
    (top_deck = (NOTYPE |-> NOVALUE) => top_deck_r = -1)) &
  
  top_deck_points_r : NAT &
  top_deck_points_r = top_deck_points &
  
  game_over_r : BOOL &
  game_over = game_over_r
INITIALISATION
  all_cards_t := CARDS_TYPES_ARRAY ||
  all_cards_v := CARDS_VALUES_ARRAY ||
  deck_r := (0..51)*{FALSE} ||
  discart_r  := (0..51)*{FALSE} ||
  player_one_hand_r := (0..51)*{FALSE} ||
  player_one_points_r := 0 ||
  player_two_hand_r := (0..51)*{FALSE} ||
  player_two_points_r := 0 ||
  current_player_r := P_ONE ||
  top_deck_r := -1 ||
  top_deck_points_r := 0 ||
  game_over_r := FALSE
OPERATIONS
  bb <-- get_game_over = bb := game_over_r;
  
  init_deck=
    BEGIN
      deck_r := (0..51)*{TRUE}
    END;
    
  init_hands =
    BEGIN
      // IGNORE OS WARNINGS, ESTA CORRETO
      deck_r := {0 |-> FALSE, 1 |-> FALSE, 2 |-> FALSE, 3 |-> FALSE, 4 |-> FALSE, 5 |-> FALSE};
      player_one_hand_r := {0 |-> TRUE, 1 |-> TRUE, 2 |-> TRUE};
      player_two_hand_r := {3 |-> TRUE, 4 |-> TRUE, 5 |-> TRUE}
    END;
    
  init_hands_points =
    BEGIN
      // IGNORE OS WARNINGS, ESTA CORRETO
      player_one_points_r := CARDS_POINTS( all_cards_v(0) ) +
        CARDS_POINTS( all_cards_v(1) ) +
        CARDS_POINTS( all_cards_v(2) );
      player_two_points_r := CARDS_POINTS( all_cards_v(3) ) +
        CARDS_POINTS( all_cards_v(4) ) +
        CARDS_POINTS( all_cards_v(5) )
//      player_one_points_r := CARDS_POINTS( tuple_second( all_cards(0) )) + 
//				CARDS_POINTS( tuple_second( all_cards(1) )) +
//				CARDS_POINTS( tuple_second( all_cards(2) ));
//      player_two_points_r := CARDS_POINTS( tuple_second( all_cards(3) )) + 
//				CARDS_POINTS( tuple_second( all_cards(4) )) +
//				CARDS_POINTS( tuple_second( all_cards(5) ))
    END;
    
  update_top_deck = 
    BEGIN
      // IGNORE OS WARNINGS, ESTA CORRETO
      // o deck SEMPRE mantem a ordem das cartas, msm após o reset
      // logo a 1ª carta do deck é a 1ª carta do deck_r
      top_deck_r := min( dom(deck_r |> {TRUE}) );
      // já que top_deck = top_deck_r e que CARDS_POINTS
      // retorna a pontuação das cartas temos que
      // top_deck_points = top_deck_points_r
      top_deck_points_r := CARDS_POINTS(
        all_cards_v( // o par PLAYABLE nesse indice
          min( dom(deck_r |> {TRUE}) ) // a carta de deck_r com menor indice
        )
      )
//      top_deck_points_r := CARDS_POINTS(
//        tuple_second( // extrai a CARTA_VALUE
//          all_cards( // o par PLAYABLE nesse indice
//            min( dom(deck_r |> {TRUE}) ) // a carta de deck_r com menor indice
//          )
//        )
//      )
    END;
    
  reset_deck =
    BEGIN
      deck_r := discart_r;
      discart_r := (0..51)*{FALSE}
    END;
    
  player_one_play = 
    BEGIN
			IF top_deck_points_r + player_one_points_r < 22 THEN
				player_one_points_r := top_deck_points_r + player_one_points_r;
				IF player_one_points_r = 21 THEN
					game_over_r := TRUE
				ELSE
					game_over_r := FALSE
				END
			ELSE
				discart_r(top_deck_r) := TRUE;
				deck_r(top_deck_r) := FALSE
			END;
      current_player_r := P_TWO;
			top_deck_r := -1;
			top_deck_points_r := 0
    END;
    
  player_two_play = 
    BEGIN
			IF top_deck_points_r + player_two_points_r < 22 THEN
				player_two_points_r := top_deck_points_r + player_two_points_r;
				IF player_two_points_r = 21 THEN
					game_over_r := TRUE
				ELSE
					game_over_r := FALSE
				END
			ELSE
				discart_r(top_deck_r) := TRUE;
				deck_r(top_deck_r) := FALSE
			END;
      current_player_r := P_ONE;
			top_deck_r := -1;
			top_deck_points_r := 0
    END
END